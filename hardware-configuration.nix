# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    # Bootloader
    loader ={
    systemd-boot.enable = true;
    efi.canTouchEfiVariables = true;
    };

    # Use the latest kernel packages

    kernelPackages = pkgs.linuxKernel.packages.linux_6_12; #* FOR LATEST pkgs.linuxPackages_latest

    # kernelPackages = pkgs.linuxPackagesFor (pkgs.linux_6_12.override {
    #   argsOverride = rec {
    #     version = "6.12.8";
    #     modDirVersion = "6.12.8";
    #       src = pkgs.fetchurl {
    #                   url = "mirror://kernel/linux/kernel/v6.x/linux-${version}.tar.xz";
    #                   sha256 = "sha256-IpHaBlygS3Fcie5QNirsPwIadBS8lj8bVnNmgsgSKXk=";
    #       };
    #     };
    #   }
    # );

    # Configure initial ramdisk modules
    initrd = {
      availableKernelModules = [
        "nvme"
        "sd_mod"
        "xhci_pci"
        "usb_storage"
      ];
      kernelModules = [ ];
    };

    # Configure kernel modules
    kernelModules = [
      "amd_pstate" "kvm-amd"
      "asus-nb-wmi" "asus_wmi"
    ];

    # Blacklist specific kernel modules
    blacklistedKernelModules = [
    #! Camera drivers
    "mc"
    "uvcvideo"
    "videodev"
    "videobuf2_v4l2"
    "videobuf2_common"
    "videobuf2_vmalloc"

    #! AMDGPU drivers
    "amdgpu" "radeon"
    ];

    # Kernel parameters configuration
    kernelParams = [
      "acpi_backlight=active" "acpi_osi=Linux"

      # CPU optimizations
      "amd_iommu=on"
      "mitigations=on"
      "amd_pstate=passive"      # Enable AMD P-State driver
      "processor.max_cstate=7"  # Limit C-states for better response time

      # Remove
      "nmi_watchdog=0"
      "intel_pstate=disable"

      # Memory security parameters
      "slab_nomerge"            # Disables merging of slabs of similar sizes
      "vsyscall=none"           # Disables legacy system call interface
      "slub_debug=FZ"           # Enables sanity checks (F) and redzoning (Z)
      "init_on_free=1"          # Fill freed pages and heap objects with zeroes
      "page_alloc.shuffle=1"    # Helps detect memory issues earlier + Major security gain

      # New memory management parameters
      "hugepagesz=2M"                # Enable 2MB huge pages
      "hugepages=2048"               # Reserve 4GB for huge pages (2048 * 2MB)
      "default_hugepagesz=2M"        # Set default huge page size
      "transparent_hugepage=madvise" # Enable transparent huge pages

      "pti=on"                      # Page Table Isolation for security
      "page_poison=1"               # Poison freed memory pages
      "randomize_kstack_offset=on"  # Enhanced kernel stack ASLR

    ];

    kernel.sysctl = {

    #! Swap related
    "vm.swappiness" = 0;  # Change this value as needed (0-100) 0 makes kernel avoid swap as much as possible

    #! Memory management
    "vm.dirty_ratio" = 10;                  # Full writeback at 10%
    "vm.page-cluster" = 3;                  # Default page clustering (test with 0 if needed)
    "vm.min_free_kbytes" = 65536;           # Reserve 64MB of free memory (adjust as needed)
    "vm.dirty_background_ratio" = 5;        # Background writeback at 5%
    "vm.compaction_proactiveness" = 0;      # Default memory compaction (change to 1 if fragmentation issues arise)

    # Memory security
    "vm.mmap_rnd_bits" = 32;                # Increase ASLR entropy
    "kernel.kptr_restrict" = 2;             # Hide kernel pointers
    "kernel.dmesg_restrict" = 1;            # Restrict dmesg access
    "vm.mmap_rnd_compat_bits" = 16;         # Compatible ASLR entropy

    # DDR5 and NUMA settings
    "vm.zone_reclaim_mode" = 0;             # Disable zone reclaim for NUMA
    "kernel.numa_balancing" = 0;            # Disable automatic NUMA balancing
    };

    # No extra module packages
    extraModulePackages = [ ];
  };

  services.fstrim = {
    enable = true;
    interval = "weekly"; # Default is weekly, which is generally sufficient
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/43aedd8b-e362-4cb3-872b-da3ea71c02c2";
      fsType = "ext4";
      options = [ "noatime" "commit=5"  ];  # Optimize for SSD
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/99F7-D86D";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };
  services.smartd = {
    enable = true;
    devices = [
      {
        device = "/dev/nvme0n1"; # FIXME: Change this to your actual disk; use lsblk to find the appropriate value
      }
    ];
  };

  # Add zram-based swap since you have no swap configured
  zramSwap = {
    enable = true;
    algorithm = "zstd";
    memoryPercent = 20;  # Use up to 20% of RAM for zram swap
  };

  hardware.cpu.amd = {
  updateMicrocode = true;
  sev.enable = true;  # Enable AMD SEV (Secure Encrypted Virtualization)
  };

  services.acpid.enable= true;

  services.power-profiles-daemon.enable= true;


  hardware.bluetooth = {
  enable = true; # enables support for Bluetooth
  powerOnBoot = false; # powers up the default Bluetooth controller on boot

    settings = {
      General = {
        Enable = "Source,Sink,Media,Socket";
      };
    };
  };

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}